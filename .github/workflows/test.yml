name: Test Minecraft recompilation
on: 
  workflow_dispatch:
    inputs:
      vf_branch:
        description: 'Vineflower branch to test'
        required: true
        default: 'develop/1.10.0'
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set up JQ
        run: |
          sudo apt-get install jq -y
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Clone MC Remapper
        uses: actions/checkout@v3
        with:
          repository: HeartPattern/MC-Remapper
          path: remapper
      - name: Build MC Remapper
        run: |
          cd remapper
          ./gradlew installDist -x test
          cd ..
      - name: Clone Vineflower
        uses: actions/checkout@v3
        with:
          repository: Vineflower/Vineflower
          ref: ${{ github.event.inputs.vf_branch }}
          path: vineflower
      - name: Build Vineflower
        run: |
          cd vineflower
          # Setting the STATUS is used to easily identify the build from multiple output jars
          STATUS=snapshot ./gradlew build -x test
          cd ..
      - name: Get mapped Minecraft jar & library list
        run: |
          export PATH=$PATH:$(pwd)/remapper/build/install/MC-Remapper/bin
          curl -s https://piston-meta.mojang.com/mc/game/version_manifest_v2.json | jq -c '.versions[0]' > latest.json
          export MC_VERSION=$(jq -r '.id' latest.json)
          curl -s $(jq -r '.url' latest.json) > mcinfo.json
          cat mcinfo.json | jq -r '.libraries | map(select(.rules == null)) | map(.name) | join("\n")' > libraries.txt
          MC-Remapper client $MC_VERSION --output remapped.jar
      - name: Decompile Minecraft
        run: |
          mkdir -p gradle-project/src/main/java
          java -jar vineflower/build/libs/vineflower-*-SNAPSHOT.jar remapped.jar gradle-project/src/main/java
      - name: Try to build
        run: |
          cd gradle-project/
          chmod +x gradlew
          ./gradlew build --scan
